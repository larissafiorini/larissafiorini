{"ast":null,"code":"function l() {\n  let e = {};\n  for (var _len = arguments.length, t = new Array(_len), _key = 0; _key < _len; _key++) {\n    t[_key] = arguments[_key];\n  }\n  for (const n of t) n && (e = {\n    ...e,\n    ...n\n  });\n  return Object.keys(e).length ? e : void 0;\n}\nexport { l as mergeStyles };","map":{"version":3,"names":["l","e","_len","arguments","length","t","Array","_key","n","Object","keys","mergeStyles"],"sources":["/home/larissa/Documentos/ghpages/larissafiorini/larissafiorini/node_modules/@radix-ui/themes/src/helpers/merge-styles.ts"],"sourcesContent":["type InlineStyle =\n  | React.CSSProperties\n  | Record<string, string | number | null | undefined>\n  | undefined;\n\n// Merges CSS styles like `classNames` merges CSS classes\nexport function mergeStyles(...styles: Array<InlineStyle>): InlineStyle {\n  let result: InlineStyle = {};\n\n  for (const style of styles) {\n    if (style) {\n      result = { ...result, ...style };\n    }\n  }\n\n  return Object.keys(result).length ? result : undefined;\n}\n"],"mappings":"AAMO,SAASA,EAAA,EAAwD;EACtE,IAAIC,CAAA,GAAsB,CAAC;EAE3B,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAH6BC,CAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAAF,CAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EAG7B,WAAWC,CAAA,IAASH,CAAA,EACdG,CAAA,KACFP,CAAA,GAAS;IAAE,GAAGA,CAAA;IAAQ,GAAGO;EAAM;EAInC,OAAOC,MAAA,CAAOC,IAAA,CAAKT,CAAM,EAAEG,MAAA,GAASH,CAAA,GAAS,MAC/C;AAAA;AAAA,SAAAD,CAAA,IAAAW,WAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}