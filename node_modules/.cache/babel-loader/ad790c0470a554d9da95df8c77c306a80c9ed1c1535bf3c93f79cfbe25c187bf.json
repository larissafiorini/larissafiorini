{"ast":null,"code":"// packages/react/accessible-icon/src/AccessibleIcon.tsx\nimport * as React from \"react\";\nimport * as VisuallyHiddenPrimitive from \"@radix-ui/react-visually-hidden\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar NAME = \"AccessibleIcon\";\nvar AccessibleIcon = _ref => {\n  let {\n    children,\n    label\n  } = _ref;\n  const child = React.Children.only(children);\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [React.cloneElement(child, {\n      // accessibility\n      \"aria-hidden\": \"true\",\n      focusable: \"false\"\n      // See: https://allyjs.io/tutorials/focusing-in-svg.html#making-svg-elements-focusable\n    }), /* @__PURE__ */jsx(VisuallyHiddenPrimitive.Root, {\n      children: label\n    })]\n  });\n};\nAccessibleIcon.displayName = NAME;\nvar Root2 = AccessibleIcon;\nexport { AccessibleIcon, Root2 as Root };","map":{"version":3,"names":["React","VisuallyHiddenPrimitive","Fragment","jsx","jsxs","NAME","AccessibleIcon","_ref","children","label","child","Children","only","cloneElement","focusable","Root","displayName","Root2"],"sources":["/home/larissa/Documentos/ghpages/larissafiorini/larissafiorini/node_modules/@radix-ui/react-accessible-icon/src/AccessibleIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as VisuallyHiddenPrimitive from '@radix-ui/react-visually-hidden';\n\nconst NAME = 'AccessibleIcon';\n\ninterface AccessibleIconProps {\n  children?: React.ReactNode;\n  /**\n   * The accessible label for the icon. This label will be visually hidden but announced to screen\n   * reader users, similar to `alt` text for `img` tags.\n   */\n  label: string;\n}\n\nconst AccessibleIcon: React.FC<AccessibleIconProps> = ({ children, label }) => {\n  const child = React.Children.only(children);\n  return (\n    <>\n      {React.cloneElement(child as React.ReactElement, {\n        // accessibility\n        'aria-hidden': 'true',\n        focusable: 'false', // See: https://allyjs.io/tutorials/focusing-in-svg.html#making-svg-elements-focusable\n      })}\n      <VisuallyHiddenPrimitive.Root>{label}</VisuallyHiddenPrimitive.Root>\n    </>\n  );\n};\n\nAccessibleIcon.displayName = NAME;\n\nconst Root = AccessibleIcon;\n\nexport {\n  AccessibleIcon,\n  //\n  Root,\n};\nexport type { AccessibleIconProps };\n"],"mappings":";AAAA,YAAYA,KAAA,MAAW;AACvB,YAAYC,uBAAA,MAA6B;AAgBrC,SAAAC,QAAA,EAMEC,GAAA,EANFC,IAAA;AAdJ,IAAMC,IAAA,GAAO;AAWb,IAAMC,cAAA,GAAgDC,IAAA,IAAyB;EAAA,IAAxB;IAAEC,QAAA;IAAUC;EAAM,IAAAF,IAAA;EACvE,MAAMG,KAAA,GAAcV,KAAA,CAAAW,QAAA,CAASC,IAAA,CAAKJ,QAAQ;EAC1C,OACE,eAAAJ,IAAA,CAAAF,QAAA;IACGM,QAAA,GAAMR,KAAA,CAAAa,YAAA,CAAaH,KAAA,EAA6B;MAAA;MAE/C,eAAe;MACfI,SAAA,EAAW;MAAA;IACb,CAAC,GACD,eAAAX,GAAA,CAAyBF,uBAAA,CAAAc,IAAA,EAAxB;MAA8BP,QAAA,EAAAC;IAAA,CAAM;EAAA,CACvC;AAEJ;AAEAH,cAAA,CAAeU,WAAA,GAAcX,IAAA;AAE7B,IAAMY,KAAA,GAAOX,cAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}